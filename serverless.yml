# "service" is the name of this project. This will also be added to your AWS resource names.
service: Bonzai

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-north-1
  environment:
    BOOKINGS_TABLE: ${self:custom.bookingsTable}
    ROOMS_TABLE: ${self:custom.roomsTable}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchWriteItem
            - dynamodb:BatchGetItem
            - dynamodb:Query
          Resource:
            - !Sub arn:aws:dynamodb:eu-north-1:${aws:accountId}:table/${self:custom.roomsTable}
            - !Sub arn:aws:dynamodb:eu-north-1:${aws:accountId}:table/${self:custom.bookingsTable}
            - !Sub arn:aws:dynamodb:eu-north-1:${aws:accountId}:table/${self:custom.bookingsTable}/index/*

functions:
  GetRooms:
    handler: functions/GetRooms/index.handler
    events:
      - httpApi:
          path: /rooms
          method: get
  CreateRoom:
    handler: functions/CreateRoom/index.handler
    events:
      - httpApi:
          path: /rooms
          method: post
  BookRoom:
    handler: functions/BookRoom/index.handler
    events:
      - httpApi:
          path: /reservations
          method: post
  GetAllBookings:
    handler: functions/GetAllBookings/index.handler
    events:
      - httpApi:
          path: /reservations
          method: get
  GetBooking:
    handler: functions/GetBooking/index.handler
    events:
      - httpApi:
          path: /reservations/{id}
          method: get
  UpdateBooking:
    handler: functions/UpdateBooking/index.handler
    events:
      - httpApi:
          path: /reservations/{id}
          method: put
  DeleteBooking:
    handler: functions/DeleteBooking/index.handler
    events:
      - httpApi:
          path: /reservations/{id}
          method: delete

package:
  individually: true

resources:
  Resources:
    RoomsTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:custom.roomsTable}
        AttributeDefinitions:
          - AttributeName: type
            AttributeType: S
          - AttributeName: room_id
            AttributeType: S
        KeySchema:
          - AttributeName: type
            KeyType: HASH
          - AttributeName: room_id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    BookingsTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:custom.bookingsTable}
        AttributeDefinitions:
          - AttributeName: room_id
            AttributeType: S
          - AttributeName: booking_id
            AttributeType: S
          - AttributeName: type
            AttributeType: S
        KeySchema:
          - AttributeName: booking_id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: RoomIdIndex
            KeySchema:
              - AttributeName: room_id
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 5
              WriteCapacityUnits: 5
          - IndexName: BookingTypeIndex
            KeySchema:
              - AttributeName: type
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 5
              WriteCapacityUnits: 5
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

custom:
  roomsTable: bonzai_hotelrooms
  bookingsTable: bonzai_reservations
